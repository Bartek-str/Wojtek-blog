{"version":3,"sources":["components/Home/Header/Menu/Menu.js","components/Home/Header/Menu/index.js","components/Home/Header/Header.js","components/Home/Header/index.js","components/Home/Main/Main.js","components/Home/Main/index.js","components/Home/Categories/Categories.js","components/Home/Categories/index.js","components/Home/Footer/Footer.js","components/Home/Footer/index.js","components/Home/Home.js","components/Home/index.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","Header","icon","faBars","Main","Categories","Footer","Home","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6PAceA,ICZAA,EDAf,WACI,OACI,oCACI,yBAAKC,UAAU,QACX,yBAAKA,UAAU,WAAf,UACA,yBAAKA,UAAU,WAAf,WACA,yBAAKA,UAAU,SAAf,cEMDC,ICZAA,EDGf,WACI,OACI,yBAAKD,UAAU,UACX,kBAAC,IAAD,CAAiBE,KAAOC,IAASH,UAAU,mBAC3C,kBAAC,EAAD,QEMGI,ICbAA,EDAf,WACI,OACI,oCACI,yBAAKJ,UAAU,QACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,QAAf,mDACA,yBAAKA,UAAU,YAAf,kCEgCLK,ICtCAA,EDAf,WACI,OACI,oCACI,yBAAKL,UAAU,cACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,SAAf,QACA,yBAAKA,UAAU,kBACf,yBAAKA,UAAU,QACX,sEACA,2MACA,sVAGR,yBAAKA,UAAU,QACX,yBAAKA,UAAU,SAAf,wBACA,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,QACX,+EACA,sDACA,6PACA,gEACA,yEAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,SAAf,WACA,yBAAKA,UAAU,eACf,yBAAKA,UAAU,QACX,oEACA,uJACA,wMExBTM,ICNAA,EDAf,WACI,OACI,yBAAKN,UAAU,YEaRO,ICfAA,EDIf,WACI,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QEUGC,MAdf,WACI,OACI,yBAAKR,UAAU,OACX,yBAAKA,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAK,IAAIC,UAAYJ,SCFtCK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.cc4d076d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Menu() {\n    return (\n        <>\n            <div className='menu'>\n                <div className='aboutMe'>O mnie</div>\n                <div className='contact'>Kontakt</div>\n                <div className='logIn'>Zaloguj</div>\n            </div>\n        </>\n    );\n}\n\nexport default Menu;","import Menu from \"./Menu\";\n\nexport default Menu;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport Menu from \"./Menu\";\n\nfunction Header() {\n    return (\n        <div className='header'>\n            <FontAwesomeIcon icon={ faBars } className='hamburger-menu' />\n            <Menu />\n        </div>\n    );\n}\n\nexport default Header;","import Header from \"./Header\";\n\nexport default Header;","import React from \"react\";\n\nfunction Main() {\n    return (\n        <>\n            <div className='main'>\n                <div className='box'>\n                    <div className='text'>wszystko co chciałbyś wiedzieć o</div>\n                    <div className='mainText'>Kawie, Herbacie i Jedzeniu</div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Main;","import Main from \"./Main\";\n\nexport default Main;","import React from \"react\";\n\nfunction Categories() {\n    return (\n        <>\n            <div className='categories'>\n                <div className='coffee'>\n                    <div className='title'>Kawa</div>\n                    <div className='coffeeIMG img' />\n                    <div className='text'>\n                        <span>To, co kocham i z czym pracuję.</span>\n                        <span>Nawet nie pomyślałbyś ile jest sposobów jej parzenia, nie wspominając o jej gatunkach, szczepach, sposobach obróbki oraz miejscach pochodzenia.</span>\n                        <span>Czym jest kawa po arabsku, dlaczego \"cafe latte\" tak na prawdę nie istnieje, o czym myśli barista mówiąc, że \"Kercha w dripie na trzysta lepsza na dwa na dziewięćdziesiąt pięć\" oraz dlaczego kawa po polsku była słynna na całą Europę.</span>\n                    </div>\n                </div>\n                <div className='food'>\n                    <div className='title'>Jedzenie, wypieki...</div>\n                    <div className='foodIMG img' />\n                    <div className='text'>\n                        <span>Jedzenie... co tu dużo przedstawiać</span>\n                        <span>Każdy je kocha.</span>\n                        <span>Jednak, czy wiesz skąd pochodzi biszkopt? Jak łatwo jest nie marnować produktów w kuchni? Że dobry posiłek wcale nie musi być skomplikowany oraz jak zorganizować swoją kuchnie.</span>\n                        <span>...pssst poznasz sekret matek.</span>\n                        <span>Jak ugotować coś z niczego.</span>\n                    </div>\n                </div>\n                <div className='tea'>\n                    <div className='title'>Herbata</div>\n                    <div className='teaIMG img' />\n                    <div className='text'>\n                        <span>Rozpieszcza smakiem, koi aromatem.</span>\n                        <span>Dziesiątki odmian i plantacji od stuleci zadowalały cesarskie podniebienia a Ty pijesz ekspresówkę?</span>\n                        <span>Po zgłębieniu tego ciekawego tematu raczej odejdziesz od takich rozwiązań bo nie wiesz jeszcze, co skrywają w sobie liście herbaty!</span>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default Categories;","import Categories from \"./Categories\";\n\nexport default Categories;","import React from \"react\";\n\nfunction Footer() {\n    return (\n        <div className='footer' />\n    );\n}\n\nexport default Footer;","import Footer from \"./Footer\";\n\nexport default Footer;","import React from \"react\";\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Categories from \"./Categories\";\nimport Footer from \"./Footer\";\n\nfunction Home() {\n    return (\n        <>\n            <Header />\n            <Main />\n            <Categories />\n            <Footer />\n        </>\n    );\n}\n\nexport default Home;","import Home from \"./Home\";\n\nexport default Home;","import React from 'react';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from 'react-router-dom';\nimport Home from \"./components/Home\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className='top'>\n                <Router>\n                    <Switch>\n                        <Route exact path='/' component={ Home } />\n                    </Switch>\n                </Router>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}